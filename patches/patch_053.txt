PATCH 053
Timestamp: 2025-09-18T22:15:17.986Z
Source: ef7adc22-1f33-4a65-9b10-05cbdc7f7f2a.jsonl:490
File: /Users/ericbuess/Projects/chess-r1/app/src/main.js
Replace All: False
============================================================

OLD STRING:
----------------------------------------
  // Enhanced bot initialization for both human white/black scenarios
  checkInitialBotTurn() {
    console.log('[CHECK_INITIAL_BOT_TURN] Called');

    if (this.game.gameMode !== 'human-vs-bot') {
      debugLogger.info('BOT_INIT', 'Not in vs Bot mode, skipping bot turn check');
      console.log('[CHECK_INITIAL_BOT_TURN] Not in bot mode, exiting');
      return;
    }

    const humanColor = this.game.getHumanColor();
    const currentPlayer = this.game.currentPlayer;
    const isBotTurn = this.game.isBotTurn();
    
    debugLogger.info('BOT_INIT', 'Checking initial bot turn', {
      humanColor,
      currentPlayer,
      isBotTurn,
      gameStatus: this.game.gameStatus
    });

    // Ensure game is not ended
    if (this.game.gameStatus === 'checkmate' || this.game.gameStatus === 'stalemate') {
      debugLogger.warn('BOT_INIT', 'Game ended, skipping bot turn');
      return;
    }

    // Check if bot should make the first move
    if (isBotTurn) {
      console.log('[CHECK_INITIAL_BOT_TURN] Bot should move first!');
      debugLogger.info('BOT_INIT', 'Bot should make first move - initializing bot turn');

      // Show bot thinking immediately
      this.showBotThinking(true);
      this.setInputEnabled(false);

      // Ensure UI is properly updated before bot move
      this.updateGameStateIndicators();

      // Small delay to allow UI to settle, then execute bot move
      setTimeout(() => {
        console.log('[CHECK_INITIAL_BOT_TURN] Calling handleBotTurn after delay');
        this.handleBotTurn();
      }, 1000);
    } else {
      debugLogger.info('BOT_INIT', 'Human goes first - enabling input and waiting for human move');
      
      // Ensure human can make moves
      this.setInputEnabled(true);
      this.showBotThinking(false);
      
      // Update UI to show it's human's turn
      this.updateGameStateIndicators();
    }
  }
----------------------------------------

NEW STRING:
----------------------------------------
  // Enhanced bot initialization for both human white/black scenarios
  checkInitialBotTurn() {
    console.log('[CHECK_INITIAL_BOT_TURN] Called');

    if (this.game.gameMode !== 'human-vs-bot') {
      debugLogger.info('BOT_INIT', 'Not in vs Bot mode, skipping bot turn check');
      console.log('[CHECK_INITIAL_BOT_TURN] Not in bot mode, exiting');
      return;
    }

    const humanColor = this.game.getHumanColor();
    const currentPlayer = this.game.currentPlayer;
    const isBotTurn = this.game.isBotTurn();

    debugLogger.info('BOT_INIT', 'Checking initial bot turn', {
      humanColor,
      currentPlayer,
      isBotTurn,
      gameStatus: this.game.gameStatus,
      moveHistory: this.game.moveHistory.length
    });

    // Ensure game is not ended
    if (this.game.gameStatus === 'checkmate' || this.game.gameStatus === 'stalemate') {
      debugLogger.warn('BOT_INIT', 'Game ended, skipping bot turn');
      return;
    }

    // CRITICAL: Ensure game status is 'playing' before attempting bot move
    // This prevents the "bot move failed" error
    if (this.game.gameStatus !== 'playing') {
      console.log('[CHECK_INITIAL_BOT_TURN] Game not in playing state yet, retrying...');
      setTimeout(() => {
        this.checkInitialBotTurn();
      }, 500);
      return;
    }

    // Check if bot should make the first move
    if (isBotTurn) {
      console.log('[CHECK_INITIAL_BOT_TURN] Bot should move first!');
      debugLogger.info('BOT_INIT', 'Bot should make first move - initializing bot turn');

      // Show bot thinking immediately
      this.showBotThinking(true);
      this.setInputEnabled(false);

      // Ensure UI is properly updated before bot move
      this.updateGameStateIndicators();

      // Longer delay for initial bot move to ensure everything is ready
      setTimeout(() => {
        console.log('[CHECK_INITIAL_BOT_TURN] Calling handleBotTurn after delay');
        // Final check before executing bot move
        if (this.game.gameStatus === 'playing' && this.game.isBotTurn()) {
          this.handleBotTurn();
        } else {
          console.error('[CHECK_INITIAL_BOT_TURN] Conditions changed, aborting bot move');
          this.showBotThinking(false);
          this.setInputEnabled(true);
        }
      }, 1500); // Increased delay for initial moves
    } else {
      debugLogger.info('BOT_INIT', 'Human goes first - enabling input and waiting for human move');

      // Ensure human can make moves
      this.setInputEnabled(true);
      this.showBotThinking(false);

      // Update UI to show it's human's turn
      this.updateGameStateIndicators();
    }
  }
----------------------------------------
