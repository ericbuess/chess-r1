PATCH 045
Timestamp: 2025-09-18T22:07:30.382Z
Source: ef7adc22-1f33-4a65-9b10-05cbdc7f7f2a.jsonl:407
File: /Users/ericbuess/Projects/chess-r1/app/src/main.js
Replace All: False
============================================================

OLD STRING:
----------------------------------------
      // NEW: Restore saved stateHistory directly
      console.log('[LOAD] Restoring saved state history:', state.stateHistory.length, 'states');
      this.stateHistory = state.stateHistory;
      this.currentStateIndex = state.currentStateIndex || (state.stateHistory.length - 1);
----------------------------------------

NEW STRING:
----------------------------------------
      // NEW: Restore saved stateHistory directly
      console.log('[LOAD] Restoring saved state history:', state.stateHistory.length, 'states');
      this.stateHistory = state.stateHistory;
      this.currentStateIndex = state.currentStateIndex || (state.stateHistory.length - 1);

      // R1 Memory Management: Apply history limit during load
      const MAX_HISTORY_LENGTH = 100;
      if (this.stateHistory.length > MAX_HISTORY_LENGTH) {
        const removedCount = this.stateHistory.length - MAX_HISTORY_LENGTH;
        console.log(`[LOAD] Trimming loaded history from ${this.stateHistory.length} to ${MAX_HISTORY_LENGTH} states`);

        // Keep initial state + most recent states
        this.stateHistory = [
          this.stateHistory[0],  // Always keep initial state
          ...this.stateHistory.slice(-(MAX_HISTORY_LENGTH - 1))
        ];

        // Adjust current index if needed
        const wasAtEnd = this.currentStateIndex === state.stateHistory.length - 1;
        if (wasAtEnd) {
          // If we were at the last state, stay at the last state
          this.currentStateIndex = this.stateHistory.length - 1;
        } else {
          // Otherwise, clamp to valid range
          this.currentStateIndex = Math.min(this.currentStateIndex, this.stateHistory.length - 1);
        }

        console.log(`[LOAD] Removed ${removedCount} old states, currentStateIndex: ${this.currentStateIndex}`);
      }
----------------------------------------
