var ke=(w,e)=>()=>(e||w((e={exports:{}}).exports,e),e.exports);var Te=ke((X,ne)=>{(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const u of a.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function t(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(o){if(o.ep)return;o.ep=!0;const a=t(o);fetch(o.href,a)}})();const T=function(){const w={};return function(e,t){typeof X=="object"&&typeof ne=="object"?ne.exports=t():typeof define=="function"&&define.amd?define("js-chess-engine",[],t):typeof X=="object"?X["js-chess-engine"]=t():e["js-chess-engine"]=t()}(w,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(o,a,u){n.o(o,a)||Object.defineProperty(o,a,{enumerable:!0,get:u})},n.r=function(o){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},n.t=function(o,a){if(1&a&&(o=n(o)),8&a||4&a&&typeof o=="object"&&o&&o.__esModule)return o;var u=Object.create(null);if(n.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:o}),2&a&&typeof o!="string")for(var h in o)n.d(u,h,(function(c){return o[c]}).bind(null,h));return u},n.n=function(o){var a=o&&o.__esModule?function(){return o.default}:function(){return o};return n.d(a,"a",a),a},n.o=function(o,a){return Object.prototype.hasOwnProperty.call(o,a)},n.p="",n(n.s=0)}([function(e,t,n){n.r(t),n.d(t,"Game",function(){return N}),n.d(t,"moves",function(){return Se}),n.d(t,"status",function(){return we}),n.d(t,"getFen",function(){return Ee}),n.d(t,"move",function(){return Be}),n.d(t,"aiMove",function(){return Pe});const o=["A","B","C","D","E","F","G","H"],a=["1","2","3","4","5","6","7","8"],u={KING_W:"K",QUEEN_W:"Q",ROOK_W:"R",BISHOP_W:"B",KNIGHT_W:"N",PAWN_W:"P",KING_B:"k",QUEEN_B:"q",ROOK_B:"r",BISHOP_B:"b",KNIGHT_B:"n",PAWN_B:"p"},h="black",c="white",y=[0,1,2,3,4],g={0:1,1:2,2:2,3:3,4:3,5:4},b={0:2,1:2,2:4,3:4,4:5,5:5},E={fullMove:1,halfMove:0,enPassant:null,isFinished:!1,checkMate:!1,check:!1,turn:c},C=Object.assign({pieces:{E1:"K",D1:"Q",A1:"R",H1:"R",C1:"B",F1:"B",B1:"N",G1:"N",A2:"P",B2:"P",C2:"P",D2:"P",E2:"P",F2:"P",G2:"P",H2:"P",E8:"k",D8:"q",A8:"r",H8:"r",C8:"b",F8:"b",B8:"n",G8:"n",A7:"p",B7:"p",C7:"p",D7:"p",E7:"p",F7:"p",G7:"p",H7:"p"},castling:{whiteShort:!0,blackShort:!0,whiteLong:!0,blackLong:!0}},E),S={UP:{A1:"A2",A2:"A3",A3:"A4",A4:"A5",A5:"A6",A6:"A7",A7:"A8",A8:null,B1:"B2",B2:"B3",B3:"B4",B4:"B5",B5:"B6",B6:"B7",B7:"B8",B8:null,C1:"C2",C2:"C3",C3:"C4",C4:"C5",C5:"C6",C6:"C7",C7:"C8",C8:null,D1:"D2",D2:"D3",D3:"D4",D4:"D5",D5:"D6",D6:"D7",D7:"D8",D8:null,E1:"E2",E2:"E3",E3:"E4",E4:"E5",E5:"E6",E6:"E7",E7:"E8",E8:null,F1:"F2",F2:"F3",F3:"F4",F4:"F5",F5:"F6",F6:"F7",F7:"F8",F8:null,G1:"G2",G2:"G3",G3:"G4",G4:"G5",G5:"G6",G6:"G7",G7:"G8",G8:null,H1:"H2",H2:"H3",H3:"H4",H4:"H5",H5:"H6",H6:"H7",H7:"H8",H8:null},DOWN:{A1:null,A2:"A1",A3:"A2",A4:"A3",A5:"A4",A6:"A5",A7:"A6",A8:"A7",B1:null,B2:"B1",B3:"B2",B4:"B3",B5:"B4",B6:"B5",B7:"B6",B8:"B7",C1:null,C2:"C1",C3:"C2",C4:"C3",C5:"C4",C6:"C5",C7:"C6",C8:"C7",D1:null,D2:"D1",D3:"D2",D4:"D3",D5:"D4",D6:"D5",D7:"D6",D8:"D7",E1:null,E2:"E1",E3:"E2",E4:"E3",E5:"E4",E6:"E5",E7:"E6",E8:"E7",F1:null,F2:"F1",F3:"F2",F4:"F3",F5:"F4",F6:"F5",F7:"F6",F8:"F7",G1:null,G2:"G1",G3:"G2",G4:"G3",G5:"G4",G6:"G5",G7:"G6",G8:"G7",H1:null,H2:"H1",H3:"H2",H4:"H3",H5:"H4",H6:"H5",H7:"H6",H8:"H7"},LEFT:{A1:null,A2:null,A3:null,A4:null,A5:null,A6:null,A7:null,A8:null,B1:"A1",B2:"A2",B3:"A3",B4:"A4",B5:"A5",B6:"A6",B7:"A7",B8:"A8",C1:"B1",C2:"B2",C3:"B3",C4:"B4",C5:"B5",C6:"B6",C7:"B7",C8:"B8",D1:"C1",D2:"C2",D3:"C3",D4:"C4",D5:"C5",D6:"C6",D7:"C7",D8:"C8",E1:"D1",E2:"D2",E3:"D3",E4:"D4",E5:"D5",E6:"D6",E7:"D7",E8:"D8",F1:"E1",F2:"E2",F3:"E3",F4:"E4",F5:"E5",F6:"E6",F7:"E7",F8:"E8",G1:"F1",G2:"F2",G3:"F3",G4:"F4",G5:"F5",G6:"F6",G7:"F7",G8:"F8",H1:"G1",H2:"G2",H3:"G3",H4:"G4",H5:"G5",H6:"G6",H7:"G7",H8:"G8"},RIGHT:{A1:"B1",A2:"B2",A3:"B3",A4:"B4",A5:"B5",A6:"B6",A7:"B7",A8:"B8",B1:"C1",B2:"C2",B3:"C3",B4:"C4",B5:"C5",B6:"C6",B7:"C7",B8:"C8",C1:"D1",C2:"D2",C3:"D3",C4:"D4",C5:"D5",C6:"D6",C7:"D7",C8:"D8",D1:"E1",D2:"E2",D3:"E3",D4:"E4",D5:"E5",D6:"E6",D7:"E7",D8:"E8",E1:"F1",E2:"F2",E3:"F3",E4:"F4",E5:"F5",E6:"F6",E7:"F7",E8:"F8",F1:"G1",F2:"G2",F3:"G3",F4:"G4",F5:"G5",F6:"G6",F7:"G7",F8:"G8",G1:"H1",G2:"H2",G3:"H3",G4:"H4",G5:"H5",G6:"H6",G7:"H7",G8:"H8",H1:null,H2:null,H3:null,H4:null,H5:null,H6:null,H7:null,H8:null},UP_LEFT:{A1:null,A2:null,A3:null,A4:null,A5:null,A6:null,A7:null,A8:null,B1:"A2",B2:"A3",B3:"A4",B4:"A5",B5:"A6",B6:"A7",B7:"A8",B8:null,C1:"B2",C2:"B3",C3:"B4",C4:"B5",C5:"B6",C6:"B7",C7:"B8",C8:null,D1:"C2",D2:"C3",D3:"C4",D4:"C5",D5:"C6",D6:"C7",D7:"C8",D8:null,E1:"D2",E2:"D3",E3:"D4",E4:"D5",E5:"D6",E6:"D7",E7:"D8",E8:null,F1:"E2",F2:"E3",F3:"E4",F4:"E5",F5:"E6",F6:"E7",F7:"E8",F8:null,G1:"F2",G2:"F3",G3:"F4",G4:"F5",G5:"F6",G6:"F7",G7:"F8",G8:null,H1:"G2",H2:"G3",H3:"G4",H4:"G5",H5:"G6",H6:"G7",H7:"G8",H8:null},DOWN_RIGHT:{A1:null,A2:"B1",A3:"B2",A4:"B3",A5:"B4",A6:"B5",A7:"B6",A8:"B7",B1:null,B2:"C1",B3:"C2",B4:"C3",B5:"C4",B6:"C5",B7:"C6",B8:"C7",C1:null,C2:"D1",C3:"D2",C4:"D3",C5:"D4",C6:"D5",C7:"D6",C8:"D7",D1:null,D2:"E1",D3:"E2",D4:"E3",D5:"E4",D6:"E5",D7:"E6",D8:"E7",E1:null,E2:"F1",E3:"F2",E4:"F3",E5:"F4",E6:"F5",E7:"F6",E8:"F7",F1:null,F2:"G1",F3:"G2",F4:"G3",F5:"G4",F6:"G5",F7:"G6",F8:"G7",G1:null,G2:"H1",G3:"H2",G4:"H3",G5:"H4",G6:"H5",G7:"H6",G8:"H7",H1:null,H2:null,H3:null,H4:null,H5:null,H6:null,H7:null,H8:null},UP_RIGHT:{A1:"B2",A2:"B3",A3:"B4",A4:"B5",A5:"B6",A6:"B7",A7:"B8",A8:null,B1:"C2",B2:"C3",B3:"C4",B4:"C5",B5:"C6",B6:"C7",B7:"C8",B8:null,C1:"D2",C2:"D3",C3:"D4",C4:"D5",C5:"D6",C6:"D7",C7:"D8",C8:null,D1:"E2",D2:"E3",D3:"E4",D4:"E5",D5:"E6",D6:"E7",D7:"E8",D8:null,E1:"F2",E2:"F3",E3:"F4",E4:"F5",E5:"F6",E6:"F7",E7:"F8",E8:null,F1:"G2",F2:"G3",F3:"G4",F4:"G5",F5:"G6",F6:"G7",F7:"G8",F8:null,G1:"H2",G2:"H3",G3:"H4",G4:"H5",G5:"H6",G6:"H7",G7:"H8",G8:null,H1:null,H2:null,H3:null,H4:null,H5:null,H6:null,H7:null,H8:null},DOWN_LEFT:{A1:null,A2:null,A3:null,A4:null,A5:null,A6:null,A7:null,A8:null,B1:null,B2:"A1",B3:"A2",B4:"A3",B5:"A4",B6:"A5",B7:"A6",B8:"A7",C1:null,C2:"B1",C3:"B2",C4:"B3",C5:"B4",C6:"B5",C7:"B6",C8:"B7",D1:null,D2:"C1",D3:"C2",D4:"C3",D5:"C4",D6:"C5",D7:"C6",D8:"C7",E1:null,E2:"D1",E3:"D2",E4:"D3",E5:"D4",E6:"D5",E7:"D6",E8:"D7",F1:null,F2:"E1",F3:"E2",F4:"E3",F5:"E4",F6:"E5",F7:"E6",F8:"E7",G1:null,G2:"F1",G3:"F2",G4:"F3",G5:"F4",G6:"F5",G7:"F6",G8:"F7",H1:null,H2:"G1",H3:"G2",H4:"G3",H5:"G4",H6:"G5",H7:"G6",H8:"G7"}},k=[[0,0,0,0,0,0,0,0],[5,5,5,5,5,5,5,5],[1,1,2,3,3,2,1,1],[.5,.5,1,2.5,2.5,1,.5,.5],[0,0,0,2,2,0,0,0],[.5,0,1,0,0,1,0,.5],[.5,0,0,-2,-2,0,0,.5],[0,0,0,0,0,0,0,0]],M=[[-4,-3,-2,-2,-2,-2,-3,-4],[-3,-2,0,0,0,0,-2,-3],[-2,0,1,1.5,1.5,1,0,-2],[-2,.5,1.5,2,2,1.5,.5,-2],[-2,0,1.5,2,2,1.5,0,-2],[-2,.5,1,1.5,1.5,1,.5,-2],[-3,-2,0,.5,.5,0,-2,-3],[-4,-3,-2,-2,-2,-2,-3,-4]],G=[[-2,-1,-1,-1,-1,-1,-1,-2],[-1,0,0,0,0,0,0,-1],[-1,0,.5,1,1,.5,0,-1],[-1,.5,.5,1,1,.5,.5,-1],[-1,0,1,1,1,1,0,-1],[-1,1,1,1,1,1,1,-1],[-1,.5,0,0,0,0,.5,-1],[-2,-1,-1,-1,-1,-1,-1,-2]],I=[[0,0,0,0,0,0,0,0],[.5,1,1,1,1,1,1,.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[0,0,0,.5,.5,0,0,0]],V=[[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-2,-3,-3,-4,-4,-3,-3,-2],[-1,-2,-2,-2,-2,-2,-2,-1],[2,2,0,0,0,0,2,2],[2,3,1,0,0,1,3,2]],R=[[-2,-1,-1,-.5,-.5,-1,-1,-2],[-1,0,0,0,0,0,0,-1],[-1,0,.5,.5,.5,.5,0,-1],[-.5,0,.5,.5,.5,.5,0,-.5],[0,0,.5,.5,.5,.5,0,-.5],[-1,.5,.5,.5,.5,.5,0,-1],[-1,0,.5,0,0,0,0,-1],[-2,-1,-1,-.5,-.5,-1,-1,-2]],oe={P:k.slice().reverse(),p:k,N:M.slice().reverse(),n:M,B:G.slice().reverse(),b:G,R:I.slice().reverse(),r:I,K:V.slice().reverse(),k:V,Q:R.slice().reverse(),q:R};function O(p){return S.UP[p]}function x(p){return S.DOWN[p]}function F(p){return S.LEFT[p]}function A(p){return S.RIGHT[p]}function U(p){return S.UP_LEFT[p]}function _(p){return S.UP_RIGHT[p]}function $(p){return S.DOWN_LEFT[p]}function K(p){return S.DOWN_RIGHT[p]}function ae(p){const s=U(p);return s?O(s):null}function re(p){const s=U(p);return s?F(s):null}function le(p){const s=_(p);return s?O(s):null}function ce(p){const s=_(p);return s?A(s):null}function ue(p){const s=$(p);return s?x(s):null}function he(p){const s=$(p);return s?F(s):null}function de(p){const s=K(p);return s?x(s):null}function ge(p){const s=K(p);return s?A(s):null}function me(p,s){return s===c?S.UP[p]:S.DOWN[p]}function Z(p,s){return s===c?S.UP_LEFT[p]:S.DOWN_RIGHT[p]}function ee(p,s){return s===c?S.UP_RIGHT[p]:S.DOWN_LEFT[p]}function fe(p,s){return s===c?S.DOWN_LEFT[p]:S.UP_RIGHT[p]}function pe(p,s){return s===c?S.DOWN_RIGHT[p]:S.UP_LEFT[p]}function J(p){return{k:10,q:9,r:5,b:3,n:3,p:1}[p.toLowerCase()]||0}function Y(p){return typeof p=="string"&&p.match("^[a-hA-H]{1}[1-8]{1}$")}const te=-1e3,ie=1e3;class z{constructor(s=JSON.parse(JSON.stringify(C))){if(typeof s=="object")this.configuration=Object.assign({},E,s);else{if(typeof s!="string")throw new Error(`Unknown configuration type ${typeof config}.`);this.configuration=Object.assign({},E,function(r=""){const[l,d,i,f,v,m]=r.split(" "),H={pieces:Object.fromEntries(l.split("/").flatMap((D,W)=>{let L=0;return D.split("").reduce((j,q)=>{const ye=q.match(/k|b|q|n|p|r/i);ye&&(j.push([`${o[L]}${a[7-W]}`,ye[0]]),L+=1);const ve=q.match(/[1-8]/);return ve&&(L+=Number(ve)),j},[])}))};return H.turn=d==="b"?h:c,H.castling={whiteLong:!1,whiteShort:!1,blackLong:!1,blackShort:!1},i.includes("K")&&(H.castling.whiteShort=!0),i.includes("k")&&(H.castling.blackShort=!0),i.includes("Q")&&(H.castling.whiteLong=!0),i.includes("q")&&(H.castling.blackLong=!0),Y(f)&&(H.enPassant=f.toUpperCase()),H.halfMove=parseInt(v),H.fullMove=parseInt(m),H}(s))}this.configuration.castling||(this.configuration.castling={whiteShort:!0,blackShort:!0,whiteLong:!0,blackLong:!0}),this.history=[]}getAttackingFields(s=this.getPlayingColor()){let r=[];for(const l in this.configuration.pieces){const d=this.getPiece(l);this.getPieceColor(d)===s&&(r=[...r,...this.getPieceMoves(d,l)])}return r}isAttackingKing(s=this.getPlayingColor()){let r=null;for(const l in this.configuration.pieces){const d=this.getPiece(l);if(this.isKing(d)&&this.getPieceColor(d)!==s){r=l;break}}return this.isPieceUnderAttack(r)}isPieceUnderAttack(s){const r=this.getPieceOnLocationColor(s),l=this.getEnemyColor(r);let d=!1,i=s,f=0;for(;O(i)&&!d;){i=O(i),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isRook(m)||this.isQueen(m)||this.isKing(m)&&f===1)&&(d=!0),m)break}for(i=s,f=0;x(i)&&!d;){i=x(i),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isRook(m)||this.isQueen(m)||this.isKing(m)&&f===1)&&(d=!0),m)break}for(i=s,f=0;F(i)&&!d;){i=F(i),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isRook(m)||this.isQueen(m)||this.isKing(m)&&f===1)&&(d=!0),m)break}for(i=s,f=0;A(i)&&!d;){i=A(i),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isRook(m)||this.isQueen(m)||this.isKing(m)&&f===1)&&(d=!0),m)break}for(i=s,f=0;ee(i,r)&&!d;){i=ee(i,r),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isBishop(m)||this.isQueen(m)||f===1&&(this.isKing(m)||this.isPawn(m)))&&(d=!0),m)break}for(i=s,f=0;Z(i,r)&&!d;){i=Z(i,r),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isBishop(m)||this.isQueen(m)||f===1&&(this.isKing(m)||this.isPawn(m)))&&(d=!0),m)break}for(i=s,f=0;pe(i,r)&&!d;){i=pe(i,r),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isBishop(m)||this.isQueen(m)||this.isKing(m)&&f===1)&&(d=!0),m)break}for(i=s,f=0;fe(i,r)&&!d;){i=fe(i,r),f++;const m=this.getPiece(i);if(m&&this.getPieceColor(m)===l&&(this.isBishop(m)||this.isQueen(m)||this.isKing(m)&&f===1)&&(d=!0),m)break}i=le(s);let v=this.getPiece(i);return v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=ce(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=re(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=ae(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=ue(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=he(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=de(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),i=ge(s),v=this.getPiece(i),v&&this.getPieceColor(v)===l&&this.isKnight(v)&&(d=!0),d}hasPlayingPlayerCheck(){return this.isAttackingKing(this.getNonPlayingColor())}hasNonPlayingPlayerCheck(){return this.isAttackingKing(this.getPlayingColor())}getLowestValuePieceAttackingLocation(s,r=this.getPlayingColor()){let l=null;for(const d in this.configuration.pieces){const i=this.getPiece(d);this.getPieceColor(i)===r&&this.getPieceMoves(i,d).map(f=>{f===s&&(l===null||J(i)<l)&&(l=J(i))})}return l}getMoves(s=this.getPlayingColor(),r=null){const l={};let d=0;for(const v in this.configuration.pieces){const m=this.getPiece(v);if(this.getPieceColor(m)===s){const H=this.getPieceMoves(m,v);H.length&&d++,Object.assign(l,{[v]:H})}}const i=this.getAttackingFields(this.getNonPlayingColor());if(this.isLeftCastlingPossible(i)&&(this.isPlayingWhite()&&l.E1.push("C1"),this.isPlayingBlack()&&l.E8.push("C8")),this.isRightCastlingPossible(i)&&(this.isPlayingWhite()&&l.E1.push("G1"),this.isPlayingBlack()&&l.E8.push("G8")),r&&d>r)return l;const f={};for(const v in l)l[v].map(m=>{const H={pieces:Object.assign({},this.configuration.pieces),castling:Object.assign({},this.configuration.castling)},D=new z(H);D.move(v,m),(this.isPlayingWhite()&&!D.isAttackingKing(h)||this.isPlayingBlack()&&!D.isAttackingKing(c))&&(f[v]||(f[v]=[]),f[v].push(m))});return Object.keys(f).length||(this.configuration.isFinished=!0,this.hasPlayingPlayerCheck()&&(this.configuration.checkMate=!0)),f}isLeftCastlingPossible(s){if(this.isPlayingWhite()&&!this.configuration.castling.whiteLong||this.isPlayingBlack()&&!this.configuration.castling.blackLong)return!1;let r=null;if(this.isPlayingWhite()&&this.getPiece("E1")==="K"&&this.getPiece("A1")==="R"&&!s.includes("E1")?r="E1":this.isPlayingBlack()&&this.getPiece("E8")==="k"&&this.getPiece("A8")==="r"&&!s.includes("E8")&&(r="E8"),!r)return!1;let l=F(r);return!this.getPiece(l)&&!s.includes(l)&&(l=F(l),!this.getPiece(l)&&!s.includes(l)&&(l=F(l),!this.getPiece(l)))}isRightCastlingPossible(s){if(this.isPlayingWhite()&&!this.configuration.castling.whiteShort||this.isPlayingBlack()&&!this.configuration.castling.blackShort)return!1;let r=null;if(this.isPlayingWhite()&&this.getPiece("E1")==="K"&&this.getPiece("H1")==="R"&&!s.includes("E1")?r="E1":this.isPlayingBlack()&&this.getPiece("E8")==="k"&&this.getPiece("H8")==="r"&&!s.includes("E8")&&(r="E8"),!r)return!1;let l=A(r);return!this.getPiece(l)&&!s.includes(l)&&(l=A(l),!this.getPiece(l)&&!s.includes(l))}getPieceMoves(s,r){return this.isPawn(s)?this.getPawnMoves(s,r):this.isKnight(s)?this.getKnightMoves(s,r):this.isRook(s)?this.getRookMoves(s,r):this.isBishop(s)?this.getBishopMoves(s,r):this.isQueen(s)?this.getQueenMoves(s,r):this.isKing(s)?this.getKingMoves(s,r):[]}isPawn(s){return s.toUpperCase()==="P"}isKnight(s){return s.toUpperCase()==="N"}isRook(s){return s.toUpperCase()==="R"}isBishop(s){return s.toUpperCase()==="B"}isQueen(s){return s.toUpperCase()==="Q"}isKing(s){return s.toUpperCase()==="K"}getPawnMoves(s,r){const l=[],d=this.getPieceColor(s);let i=me(r,d);return i&&!this.getPiece(i)&&(l.push(i),i=me(i,d),function(f,v){return f===c&&v[1]==="2"||f===h&&v[1]==="7"}(d,r)&&i&&!this.getPiece(i)&&l.push(i)),i=Z(r,d),i&&(this.getPiece(i)&&this.getPieceOnLocationColor(i)!==d||i===this.configuration.enPassant)&&l.push(i),i=ee(r,d),i&&(this.getPiece(i)&&this.getPieceOnLocationColor(i)!==d||i===this.configuration.enPassant)&&l.push(i),l}getKnightMoves(s,r){const l=[],d=this.getPieceColor(s);let i=le(r);return i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=ce(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=ae(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=re(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=he(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=ue(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=ge(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=de(r),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),l}getRookMoves(s,r){const l=[],d=this.getPieceColor(s);let i=r;for(;O(i);){i=O(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}for(i=r;x(i);){i=x(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}for(i=r;A(i);){i=A(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}for(i=r;F(i);){i=F(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}return l}getBishopMoves(s,r){const l=[],d=this.getPieceColor(s);let i=r;for(;U(i);){i=U(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}for(i=r;_(i);){i=_(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}for(i=r;$(i);){i=$(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}for(i=r;K(i);){i=K(i);const f=this.getPieceOnLocationColor(i);if(this.getPieceOnLocationColor(i)!==d&&l.push(i),f)break}return l}getQueenMoves(s,r){return[...this.getRookMoves(s,r),...this.getBishopMoves(s,r)]}getKingMoves(s,r){const l=[],d=this.getPieceColor(s);let i=r;return i=O(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=A(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=x(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=F(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=U(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=_(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=$(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),i=r,i=K(i),i&&this.getPieceOnLocationColor(i)!==d&&l.push(i),l}getPieceColor(s){return s.toUpperCase()===s?c:h}getPieceOnLocationColor(s){const r=this.getPiece(s);return r?r.toUpperCase()===r?c:h:null}getPiece(s){return this.configuration.pieces[s]}setPiece(s,r){if(!function(l){return Object.values(u).includes(l)}(r))throw new Error("Invalid piece "+r);if(!Y(s))throw new Error("Invalid location "+s);this.configuration.pieces[s.toUpperCase()]=r}removePiece(s){if(!Y(s))throw new Error("Invalid location "+s);delete this.configuration.pieces[s.toUpperCase()]}isEmpty(s){if(!Y(s))throw new Error("Invalid location "+s);return!this.configuration.pieces[s.toUpperCase()]}getEnemyColor(s){return s===c?h:c}getPlayingColor(){return this.configuration.turn}getNonPlayingColor(){return this.isPlayingWhite()?h:c}isPlayingWhite(){return this.configuration.turn===c}isPlayingBlack(){return this.configuration.turn===h}addMoveToHistory(s,r){this.history.push({from:s,to:r,configuration:JSON.parse(JSON.stringify(this.configuration))})}move(s,r){const l=this.getPiece(s),d=this.getPiece(r);if(!l)throw new Error("There is no piece at "+s);var i,f;if(Object.assign(this.configuration.pieces,{[r]:l}),delete this.configuration.pieces[s],this.isPlayingWhite()&&this.isPawn(l)&&r[1]==="8"&&Object.assign(this.configuration.pieces,{[r]:"Q"}),this.isPlayingBlack()&&this.isPawn(l)&&r[1]==="1"&&Object.assign(this.configuration.pieces,{[r]:"q"}),this.isPawn(l)&&r===this.configuration.enPassant&&delete this.configuration.pieces[i=r,f=this.getPlayingColor(),f===c?S.DOWN[i]:S.UP[i]],this.isPawn(l)&&this.isPlayingWhite()&&s[1]==="2"&&r[1]==="4"?this.configuration.enPassant=s[0]+"3":this.isPawn(l)&&this.isPlayingBlack()&&s[1]==="7"&&r[1]==="5"?this.configuration.enPassant=s[0]+"6":this.configuration.enPassant=null,s==="E1"&&Object.assign(this.configuration.castling,{whiteLong:!1,whiteShort:!1}),s==="E8"&&Object.assign(this.configuration.castling,{blackLong:!1,blackShort:!1}),s==="A1"&&Object.assign(this.configuration.castling,{whiteLong:!1}),s==="H1"&&Object.assign(this.configuration.castling,{whiteShort:!1}),s==="A8"&&Object.assign(this.configuration.castling,{blackLong:!1}),s==="H8"&&Object.assign(this.configuration.castling,{blackShort:!1}),this.isKing(l)){if(s==="E1"&&r==="C1")return this.move("A1","D1");if(s==="E8"&&r==="C8")return this.move("A8","D8");if(s==="E1"&&r==="G1")return this.move("H1","F1");if(s==="E8"&&r==="G8")return this.move("H8","F8")}this.configuration.turn=this.isPlayingWhite()?h:c,this.isPlayingWhite()&&this.configuration.fullMove++,this.configuration.halfMove++,(d||this.isPawn(l))&&(this.configuration.halfMove=0)}exportJson(){return{moves:this.getMoves(),pieces:this.configuration.pieces,turn:this.configuration.turn,isFinished:this.configuration.isFinished,check:this.hasPlayingPlayerCheck(),checkMate:this.configuration.checkMate,castling:this.configuration.castling,enPassant:this.configuration.enPassant,halfMove:this.configuration.halfMove,fullMove:this.configuration.fullMove}}calculateAiMove(s){return this.calculateAiMoves(s)[0]}calculateAiMoves(s){if(s=parseInt(s),!y.includes(s))throw new Error(`Invalid level ${s}. You can choose ${y.join(",")}`);this.shouldIncreaseLevel()&&s++;const r=[],l=this.calculateScore(this.getPlayingColor()),d=this.getMoves();for(const i in d)d[i].map(f=>{const v=this.getTestBoard(),m=!!v.getPiece(f);v.move(i,f),r.push({from:i,to:f,score:v.testMoveScores(this.getPlayingColor(),s,m,m?v.calculateScore(this.getPlayingColor()):l,f).score+v.calculateScoreByPiecesLocation(this.getPlayingColor())+Math.floor(Math.random()*(this.configuration.halfMove>10?this.configuration.halfMove-10:1)*10)/10})});return r.sort((i,f)=>i.score<f.score?1:i.score>f.score?-1:0),r}shouldIncreaseLevel(){return this.getIngamePiecesValue()<50}getIngamePiecesValue(){let s=0;for(const r in this.configuration.pieces)s+=J(this.getPiece(r));return s}getTestBoard(){const s={pieces:Object.assign({},this.configuration.pieces),castling:Object.assign({},this.configuration.castling),turn:this.configuration.turn,enPassant:this.configuration.enPassant};return new z(s)}testMoveScores(s,r,l,d,i,f=1){let v=null;if(f<b[r]&&this.hasPlayingPlayerCheck()?v=this.getMoves(this.getPlayingColor()):(f<g[r]||l&&f<b[r])&&(v=this.getMoves(this.getPlayingColor(),5)),this.configuration.isFinished)return{score:this.calculateScore(s)+(this.getPlayingColor()===s?f:-f),max:!0};if(!v)return d!==null?{score:d,max:!1}:{score:this.calculateScore(s),max:!1};let m=this.getPlayingColor()===s?te:ie,H=!1;for(const D in v)H||v[D].map(W=>{if(H)return;const L=this.getTestBoard(),j=!!L.getPiece(W);if(L.move(D,W),L.hasNonPlayingPlayerCheck())return;const q=L.testMoveScores(s,r,j,j?L.calculateScore(s):d,W,f+1);q.max&&(H=!0),m=this.getPlayingColor()===s?Math.max(m,q.score):Math.min(m,q.score)});return{score:m,max:!1}}calculateScoreByPiecesLocation(s=this.getPlayingColor()){const r={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7};let l=0;for(const d in this.configuration.pieces){const i=this.getPiece(d);if(oe[i]){const f=oe[i][d[1]-1][r[d[0]]];l+=.5*(this.getPieceColor(i)===s?f:-f)}}return l}calculateScore(s=this.getPlayingColor()){let r=0;if(this.configuration.checkMate)return this.getPlayingColor()===s?te:ie;if(this.configuration.isFinished)return this.getPlayingColor()===s?ie:te;for(const l in this.configuration.pieces){const d=this.getPiece(l);this.getPieceColor(d)===s?r+=10*J(d):r-=10*J(d)}return r}}class N{constructor(s){this.board=new z(s)}move(s,r){s=s.toUpperCase(),r=r.toUpperCase();const l=this.board.getMoves();if(!l[s]||!l[s].includes(r))throw new Error(`Invalid move from ${s} to ${r} for ${this.board.getPlayingColor()}`);return this.board.addMoveToHistory(s,r),this.board.move(s,r),{[s]:r}}moves(s=null){return(s?this.board.getMoves()[s.toUpperCase()]:this.board.getMoves())||[]}setPiece(s,r){this.board.setPiece(s,r)}removePiece(s){this.board.removePiece(s)}aiMove(s=2){const r=this.board.calculateAiMove(s);return this.move(r.from,r.to)}getHistory(s=!1){return s?this.board.history.reverse():this.board.history}printToConsole(){(function(s){process.stdout.write(`
`);let r=c;Object.assign([],a).reverse().map(l=>{process.stdout.write(""+l),o.map(d=>{switch(s.pieces[`${d}${l}`]){case"K":process.stdout.write("♚");break;case"Q":process.stdout.write("♛");break;case"R":process.stdout.write("♜");break;case"B":process.stdout.write("♝");break;case"N":process.stdout.write("♞");break;case"P":process.stdout.write("♟");break;case"k":process.stdout.write("♔");break;case"q":process.stdout.write("♕");break;case"r":process.stdout.write("♖");break;case"b":process.stdout.write("♗");break;case"n":process.stdout.write("♘");break;case"p":process.stdout.write("♙");break;default:process.stdout.write(r===c?"█":"░")}r=r===c?h:c}),r=r===c?h:c,process.stdout.write(`
`)}),process.stdout.write(" "),o.map(l=>{process.stdout.write(""+l)}),process.stdout.write(`
`)})(this.board.configuration)}exportJson(){return this.board.exportJson()}exportFEN(){return function(s){let r="";Object.assign([],a).reverse().map(v=>{let m=0;v<8&&(r+="/"),o.map(H=>{const D=s.pieces[`${H}${v}`];D?(m&&(r+=m.toString(),m=0),r+=D):m++}),r+=""+(m||"")}),r+=s.turn===c?" w ":" b ";const{whiteShort:l,whiteLong:d,blackLong:i,blackShort:f}=s.castling;return d||l||i||f?(l&&(r+="K"),d&&(r+="Q"),f&&(r+="k"),i&&(r+="q")):r+="-",r+=" "+(s.enPassant?s.enPassant.toLowerCase():"-"),r+=" "+s.halfMove,r+=" "+s.fullMove,r}(this.board.configuration)}}function Se(p){if(!p)throw new Error("Configuration param required.");return new N(p).moves()}function we(p){if(!p)throw new Error("Configuration param required.");return new N(p).exportJson()}function Ee(p){if(!p)throw new Error("Configuration param required.");return new N(p).exportFEN()}function Be(p,s,r){if(!p)throw new Error("Configuration param required.");const l=new N(p);return l.move(s,r),typeof p=="object"?l.exportJson():l.exportFEN()}function Pe(p,s=2){if(!p)throw new Error("Configuration param required.");const r=new N(p).board.calculateAiMove(s);return{[r.from]:r.to}}}])}),w["js-chess-engine"]}();class Me{constructor(){this.engine=new T.Game,this.selectedSquare=null,this.possibleMoves=[],this.boardFlipped=!1,this.orientationMode="handoff",this.gameMode="human-vs-bot",this.humanColor="white",this.botDifficulty=1,this.allowUndo=!0,this.soundEnabled=!0,this.originalGameMode="human-vs-bot",this.originalHumanColor="white",this.colorChangedMidGame=!1,this.originalBotDifficulty=1,this.difficultyChangedMidGame=!1,this.board=this.engineStateToBoard(),this.currentPlayer="white",this.gameStatus="playing",this.stateHistory=[],this.currentStateIndex=0,this.isInUndoRedoState=!1,this.lastUndoWasBotMove=!1,this.moveHistory=[];const e=this.engine.exportJson();this.stateHistory.push({engineState:JSON.parse(JSON.stringify(e)),move:null,notation:null,timestamp:Date.now()}),this.sounds=this.createSoundSystem(),this.checkDepth=0,this.checkOperations=0,this.maxCheckDepth=10,this.maxCheckOperations=1e3,this.isEndgameDetection=!1,this.castlingRights={white:{kingside:!0,queenside:!0},black:{kingside:!0,queenside:!0}},this.enPassantTarget=null}async makeMove(e,t,n,o){const a=this.coordsToSquare(e,t),u=this.coordsToSquare(n,o);try{const h=this.board[n][o],c=h!==null,y=this.board[e][t],g=this.engine.move(a,u);this.updateCachedState(),this.boardFlipped=this.determineOrientation();const b=this.updateGameStatus();if(b){const S=this.currentPlayer==="white"?"White":"Black"}const E=this.generateMoveNotation(e,t,n,o,y,h,this.gameStatus==="check",this.gameStatus==="checkmate"),C=this.generateMoveCommentary(e,t,n,o,y,h,null);return this.recordGameState({from:{row:e,col:t},to:{row:n,col:o},piece:y,captured:h,notation:E,commentary:C}),c?this.playSound("capture"):this.playSound("move"),this.gameStatus==="checkmate"?setTimeout(()=>this.playSound("checkmate"),c?100:0):this.gameStatus==="check"&&setTimeout(()=>this.playSound("check"),c?100:0),await this.autoSave(),{success:!0,enteredCheck:b}}catch{return{success:!1,enteredCheck:!1}}}getPossibleMoves(e,t){const n=this.coordsToSquare(e,t),o=this.engine.moves(n);return!o||o.length===0?[]:o.map(a=>{const u=this.squareToCoords(a);return{row:u.row,col:u.col}})}updateGameStatus(){const e=this.engine.exportJson(),t=this.gameStatus;return e.checkMate?this.gameStatus="checkmate":e.isFinished&&!e.checkMate?this.gameStatus="stalemate":e.check?this.gameStatus="check":this.gameStatus="playing",t!=="check"&&this.gameStatus==="check"}updateCachedState(){const e=this.engine.exportJson();this.board=this.engineStateToBoard(),this.currentPlayer,this.currentPlayer=e.turn,this.castlingRights={white:{kingside:e.castling.whiteShort,queenside:e.castling.whiteLong},black:{kingside:e.castling.blackShort,queenside:e.castling.blackLong}},this.enPassantTarget=e.enPassant}isBotTurn(){return this.gameMode==="human-vs-human"?!1:this.currentPlayer!==this.humanColor}async generateBotMove(){try{const e=this.board,t=this.engine.aiMove(this.botDifficulty);this.updateCachedState();const n=this.updateGameStatus(),o=Object.entries(t);if(o.length>0){const[a,u]=o[0],h=this.squareToCoords(a),c=this.squareToCoords(u),y=this.board[c.row][c.col],g=e[c.row][c.col],b=this.generateMoveNotation(h.row,h.col,c.row,c.col,y,g,this.gameStatus==="check",this.gameStatus==="checkmate"),E=this.generateMoveCommentary(h.row,h.col,c.row,c.col,y,g,null);return this.recordGameState({from:h,to:c,piece:y,captured:g,notation:b,commentary:E}),g?this.playSound("capture"):this.playSound("move"),this.gameStatus==="checkmate"?setTimeout(()=>this.playSound("checkmate"),g?100:0):this.gameStatus==="check"&&setTimeout(()=>this.playSound("check"),g?100:0),await this.autoSave(),{from:h,to:c,piece:y,enteredCheck:n}}}catch{}return null}async executeBotMove(){const e=this.gameMode==="human-vs-bot",t=this.isBotTurn(),n=this.gameStatus==="playing"||this.gameStatus==="check";if(!e||!t||!n)return{success:!1,enteredCheck:!1};const o=Date.now(),a=await this.generateBotMove();if(!a)return{success:!1,enteredCheck:!1};const u=a.enteredCheck||!1,h=Date.now()-o,c=800+Math.random()*400,y=Math.max(0,c-h);return await new Promise(g=>setTimeout(g,y)),await this.autoSave(),{success:!0,enteredCheck:u}}recordGameState(e){this.currentStateIndex<this.stateHistory.length-1&&(this.stateHistory=this.stateHistory.slice(0,this.currentStateIndex+1)),this.isInUndoRedoState=!1;const t=100,n={engineState:null,move:{from:e.from,to:e.to,piece:e.piece,captured:e.captured},notation:e.notation,commentary:e.commentary,timestamp:Date.now()};this.stateHistory.push(n),this.currentStateIndex++,this.stateHistory.length>t&&(this.stateHistory.length-t,this.stateHistory=[this.stateHistory[0],...this.stateHistory.slice(-99)],this.currentStateIndex=this.stateHistory.length-1),this.moveHistory||(this.moveHistory=[]),this.moveHistory.push({from:e.from,to:e.to,piece:e.piece,captured:e.captured,notation:e.notation}),this.moveHistory.length>t-1&&(this.moveHistory=this.moveHistory.slice(-99)),this.autoSave().catch(o=>{})}coordsToSquare(e,t){const n=["A","B","C","D","E","F","G","H"],o=["8","7","6","5","4","3","2","1"];return n[t]+o[e]}squareToCoords(e){const t=["A","B","C","D","E","F","G","H"],n=["8","7","6","5","4","3","2","1"],o=e[0],a=e[1],u=t.indexOf(o);return{row:n.indexOf(a),col:u}}engineStateToBoard(){const e=this.engine.exportJson(),t=Array(8).fill(null).map(()=>Array(8).fill(null));for(const[n,o]of Object.entries(e.pieces)){const a=this.squareToCoords(n),u=this.parsePiece(o);u!==null&&(t[a.row][a.col]=u)}return t}parsePiece(e){if(typeof e!="string"||e.length!==1)return null;const t=e===e.toUpperCase(),o={K:"king",Q:"queen",R:"rook",B:"bishop",N:"knight",P:"pawn"}[e.toUpperCase()];return o?{type:o,color:t?"white":"black"}:null}newGame(){this.engine=new T.Game,this.selectedSquare=null,this.possibleMoves=[],this.moveHistory=[],this.currentMoveIndex=-1,this.initialEngineState=JSON.parse(JSON.stringify(this.engine.exportJson())),this.colorChangedMidGame=!1,this.originalHumanColor=this.humanColor,this.stateHistory=[],this.currentStateIndex=0,this.isInUndoRedoState=!1;const e=this.engine.exportJson();this.stateHistory.push({engineState:JSON.parse(JSON.stringify(e)),move:null,captured:null,notation:null,commentary:null}),this.updateCachedState(),this.updateGameStatus(),this.boardFlipped=this.determineOrientation(),this.playSound("newGame")}setGameMode(e){this.gameMode=e}setHumanColor(e){this.gameMode==="human-vs-bot"&&this.moveHistory&&this.moveHistory.length>0&&(this.colorChangedMidGame=e!==this.originalHumanColor),this.humanColor=e,this.boardFlipped=this.determineOrientation()}setBotDifficulty(e){this.gameMode==="human-vs-bot"&&this.moveHistory&&this.moveHistory.length>0&&(this.difficultyChangedMidGame=e!==this.originalBotDifficulty),this.botDifficulty=e}setBotDifficulty(e){this.gameMode==="human-vs-bot"&&this.moveHistory&&this.moveHistory.length>0&&(this.difficultyChangedMidGame=e!==this.originalBotDifficulty),this.botDifficulty=e}getGameMode(){return this.gameMode}getHumanColor(){return this.humanColor}shouldFlipBoard(){return this.gameMode==="human-vs-bot"&&this.humanColor==="black"}determineOrientation(){this.boardFlipped;let e=!1;return this.gameMode==="human-vs-human"?this.orientationMode==="none"?e=!1:this.orientationMode==="table"?e=this.currentPlayer==="black":this.orientationMode==="handoff"&&(e=this.currentPlayer==="black"):e=this.humanColor==="black",e}setCorrectBoardPerspective(){const e=this.shouldFlipBoard();return this.boardFlipped!==e?(this.boardFlipped=e,!0):!1}getGameState(){const e=this.engine.exportJson();return{board:this.board,currentPlayer:this.currentPlayer,gameStatus:this.gameStatus,moveHistory:this.moveHistory,stateHistory:this.stateHistory,currentStateIndex:this.currentStateIndex,selectedSquare:this.selectedSquare,possibleMoves:this.possibleMoves,gameMode:this.gameMode,humanColor:this.humanColor,botDifficulty:this.botDifficulty,allowUndo:this.allowUndo,boardFlipped:this.boardFlipped,orientationMode:this.orientationMode,castlingRights:this.castlingRights,enPassantTarget:this.enPassantTarget,soundEnabled:this.soundEnabled,engineState:e}}loadGameState(e,t={}){var o,a,u,h,c,y,g,b;if(e.engineState)this.engine=new T.Game(e.engineState);else{const E={pieces:{},turn:e.currentPlayer,castling:{whiteShort:((a=(o=e.castlingRights)==null?void 0:o.white)==null?void 0:a.kingside)||!1,whiteLong:((h=(u=e.castlingRights)==null?void 0:u.white)==null?void 0:h.queenside)||!1,blackShort:((y=(c=e.castlingRights)==null?void 0:c.black)==null?void 0:y.kingside)||!1,blackLong:((b=(g=e.castlingRights)==null?void 0:g.black)==null?void 0:b.queenside)||!1},enPassant:e.enPassantTarget||null},C=["A","B","C","D","E","F","G","H"],S=["8","7","6","5","4","3","2","1"];for(let k=0;k<8;k++)for(let M=0;M<8;M++){const G=e.board[k][M];if(G){const I=C[M]+S[k],R={pawn:"P",rook:"R",knight:"N",bishop:"B",queen:"Q",king:"K"}[G.type];E.pieces[I]=G.color==="white"?R:R.toLowerCase()}}this.engine=new T.Game(E)}if(this.selectedSquare=e.selectedSquare||null,this.possibleMoves=e.possibleMoves||[],t.preserveGameMode||(this.gameMode=e.gameMode||"human-vs-bot"),this.humanColor=e.humanColor||"white",this.botDifficulty=e.botDifficulty!==void 0?e.botDifficulty:1,this.allowUndo=e.allowUndo!==void 0?e.allowUndo:!0,this.orientationMode=e.orientationMode||"handoff",this.boardFlipped=!1,this.soundEnabled=e.soundEnabled!==void 0?e.soundEnabled:!0,this.moveHistory=e.moveHistory||[],this.moveHistory.length>100-1&&(this.moveHistory=this.moveHistory.slice(-99)),this.currentMoveIndex=e.currentMoveIndex!==void 0?e.currentMoveIndex:this.moveHistory.length-1,e.initialEngineState)this.initialEngineState=JSON.parse(JSON.stringify(e.initialEngineState));else{const E=new T.Game;this.initialEngineState=JSON.parse(JSON.stringify(E.exportJson()))}if(!this.initialEngineState.pieces||!this.initialEngineState.pieces.E2){const E=new T.Game;this.initialEngineState=JSON.parse(JSON.stringify(E.exportJson()))}if(this.updateCachedState(),this.boardFlipped=this.determineOrientation(),e.stateHistory&&e.stateHistory.length>0){this.stateHistory=e.stateHistory,this.currentStateIndex=e.currentStateIndex||e.stateHistory.length-1;const E=100;this.stateHistory.length>E&&(this.stateHistory.length-E,this.stateHistory=[this.stateHistory[0],...this.stateHistory.slice(-99)],this.currentStateIndex===e.stateHistory.length-1?this.currentStateIndex=this.stateHistory.length-1:this.currentStateIndex=Math.min(this.currentStateIndex,this.stateHistory.length-1))}else{this.stateHistory=[],this.currentStateIndex=0;const E=new T.Game;if(this.stateHistory.push({engineState:JSON.parse(JSON.stringify(E.exportJson())),move:null,notation:null,timestamp:Date.now()}),e.moveHistory&&e.moveHistory.length>0){const C=new T.Game;for(let S=0;S<e.moveHistory.length;S++){const k=e.moveHistory[S],M=this.coordsToSquare(k.from.row,k.from.col),G=this.coordsToSquare(k.to.row,k.to.col);try{C.move(M,G),this.stateHistory.push({engineState:JSON.parse(JSON.stringify(C.exportJson())),move:k,notation:k.notation||`${M}-${G}`,timestamp:Date.now()}),this.currentStateIndex++}catch{break}}}}}async autoSave(){try{const e=this.getGameState(),t=this.getStorageKey();return await se(t,e),await se("last_game_mode",{mode:this.gameMode,timestamp:Date.now()}),!0}catch{return!1}}getStorageKey(){return`chess_game_state_${this.gameMode.replace(/-/g,"_")}`}isHumanTurn(){return this.gameMode==="human-vs-human"?!0:this.currentPlayer===this.humanColor}getGameModeDisplayText(){return this.gameMode==="human-vs-human"?"Human vs Human":`Human (${this.humanColor}) vs Bot`}getBotDifficultyText(){return{0:"Random",1:"Ella",2:"Evy",3:"Emmy",4:"Asa"}[this.botDifficulty]||"Ella"}getColorOptions(){return[{value:"white",label:"White"},{value:"black",label:"Black"}]}getGameModeOptions(){return[{value:"human-vs-bot",label:"Human vs Bot"},{value:"human-vs-human",label:"Human vs Human"}]}createSoundSystem(){const e={},t=window.woodenSoundData||{},n={moves:[t.move_1,t.move_2,t.move_3,t.move_4,t.move_5],quick:[t.quick_1,t.quick_2],pop_check:t.pop_check};let o=-1;const a=(u,h=.4)=>{if(!this.soundEnabled||!u)return Promise.resolve();const c=new Audio(u);return c.volume=h,c.play().catch(()=>{})};return e.move=()=>{const u=n.moves.map((c,y)=>y).filter(c=>c!==o),h=Math.floor(Math.random()*u.length);o=u[h],a(n.moves[o])},e.capture=()=>{const u=[...n.moves,...n.quick],h=Math.floor(Math.random()*u.length),c=u[h],y=u.filter((E,C)=>C!==h),g=Math.floor(Math.random()*y.length),b=y[g];a(c,.25),setTimeout(()=>a(b,.4),50)},e.check=()=>{a(n.pop_check)},e.checkmate=()=>{a(n.pop_check)},e.newGame=()=>{const u=Math.floor(Math.random()*n.moves.length);a(n.moves[u])},e.victory=()=>{a(n.pop_check)},e.gameEnd=()=>{const u=Math.floor(Math.random()*n.moves.length);a(n.moves[u])},e}playSound(e){this.sounds&&this.sounds[e]&&this.sounds[e]()}initializeBoard(){}isValidPosition(e,t){return e>=0&&e<8&&t>=0&&t<8}canUndo(){return this.allowUndo&&this.currentStateIndex>0}canRedo(){return this.allowUndo&&this.currentStateIndex<this.stateHistory.length-1}reconstructEngineState(e){if(e===0)return this.stateHistory[0].engineState;const t=this.stateHistory[0].engineState;if(!t)return null;const n=new T.Game(JSON.parse(JSON.stringify(t)));for(let o=1;o<=e;o++){const a=this.stateHistory[o].move;if(!a)break;const u=this.coordsToSquare(a.from.row,a.from.col),h=this.coordsToSquare(a.to.row,a.to.col);try{n.move(u,h)}catch{break}}return n.exportJson()}undoMove(){if(!this.canUndo())return!1;const e=this.stateHistory[this.currentStateIndex],t=e&&e.captured;this.currentStateIndex--;const n=this.stateHistory[this.currentStateIndex];let o;return n.engineState?o=JSON.parse(JSON.stringify(n.engineState)):o=this.reconstructEngineState(this.currentStateIndex),o?(this.engine=new T.Game(o),this.updateCachedState(),this.updateGameStatus(),this.board=this.engineStateToBoard(),this.selectedSquare=null,this.possibleMoves=[],this.isInUndoRedoState=!0,t?this.playSound("capture"):this.playSound("move"),this.gameStatus==="checkmate"?setTimeout(()=>this.playSound("checkmate"),t?100:0):this.gameStatus==="check"&&setTimeout(()=>this.playSound("check"),t?100:0),!0):!1}redoMove(){if(!this.canRedo())return!1;this.currentStateIndex++;const e=this.stateHistory[this.currentStateIndex];let t;if(e.engineState?t=JSON.parse(JSON.stringify(e.engineState)):t=this.reconstructEngineState(this.currentStateIndex),!t)return!1;this.engine=new T.Game(t),this.updateCachedState(),this.updateGameStatus(),this.board=this.engineStateToBoard(),e.move,this.selectedSquare=null,this.possibleMoves=[],this.isInUndoRedoState=!0;const n=e.move&&e.move.captured;return n?this.playSound("capture"):this.playSound("move"),this.gameStatus==="checkmate"?setTimeout(()=>this.playSound("checkmate"),n?100:0):this.gameStatus==="check"&&setTimeout(()=>this.playSound("check"),n?100:0),!0}getCurrentMoveIndex(){return this.currentStateIndex-1}getCapturedPieces(){const e=[],t=[];for(let o=1;o<=this.currentStateIndex&&o<this.stateHistory.length;o++){const a=this.stateHistory[o];a.move&&a.move.captured&&(a.move.captured.color==="white"?e.push(a.move.captured):t.push(a.move.captured))}const n={queen:1,rook:2,bishop:3,knight:4,pawn:5};return e.sort((o,a)=>(n[o.type]||6)-(n[a.type]||6)),t.sort((o,a)=>(n[o.type]||6)-(n[a.type]||6)),{whiteCaptured:e,blackCaptured:t}}validateGameState(){return!0}coordsToChessNotation(e,t){return this.coordsToSquare(e,t)}generateMoveNotation(e,t,n,o,a,u,h,c){const y=this.coordsToSquare(e,t),g=this.coordsToSquare(n,o);return`${y}-${g}`}generateMoveCommentary(e,t,n,o,a,u,h){this.coordsToSquare(e,t);const c=this.coordsToSquare(n,o),y=a.color.charAt(0).toUpperCase()+a.color.slice(1);return u?`${y} ${a.type} captures ${c} ${u.type}`:`${y} ${a.type} to ${c}`}calculateMaterialBalance(){const e={pawn:1,knight:3,bishop:3,rook:5,queen:9,king:0};let t=0,n=0;for(let o=0;o<8;o++)for(let a=0;a<8;a++){const u=this.board[o][a];if(u){const h=e[u.type]||0;u.color==="white"?t+=h:n+=h}}return t-n}countPieces(){let e=0;for(let t=0;t<8;t++)for(let n=0;n<8;n++)this.board[t][n]&&e++;return e}calculateBoardChecksum(e){return JSON.stringify(e).length}calculateMoveHistoryChecksum(e){return e.length}testSaveLoadCycle(){return Promise.resolve(!0)}getPieceSymbol(e){var n;return e&&((n={king:{white:"♚",black:"♚"},queen:{white:"♛",black:"♛"},rook:{white:"♜",black:"♜"},bishop:{white:"♝",black:"♝"},knight:{white:"♞",black:"♞"},pawn:{white:"♟︎",black:"♟︎"}}[e.type])==null?void 0:n[e.color])||""}isInCheck(){const e=this.engine.exportJson();return e.check||e.checkMate}}let B,P;class He{constructor(e){this.game=e,this.boardElement=document.getElementById("chess-board"),this.moveDisplayElement=document.getElementById("move-display"),this.gameStatusElement=document.getElementById("game-status"),this.isFlipping=!1,this.inputEnabled=!0,this.lastAlertTime=0,this.alertCooldown=1e3;const t=document.getElementById("move-expand");t&&t.addEventListener("click",()=>{const n=t.dataset.fullText;n&&this.showNotification(n,"info",3e3)}),this.initializeBoard(),this.updateDisplay(),this.checkInitialBotTurn()}initializeBoard(){this.boardElement.innerHTML="";for(let e=0;e<8;e++)for(let t=0;t<8;t++){const n=document.createElement("div");n.className="chess-square",n.dataset.row=e,n.dataset.col=t;const o=(e+t)%2===0;n.classList.add(o?"light-square":"dark-square"),n.addEventListener("click",async a=>await this.handleSquareClick(a)),n.addEventListener("touchstart",a=>this.handleTouchStart(a)),n.addEventListener("touchend",async a=>await this.handleTouchEnd(a)),n.addEventListener("touchcancel",a=>this.handleTouchCancel(a)),this.boardElement.appendChild(n)}this.applyTheme()}async handleSquareClick(e){const t=parseInt(e.target.dataset.row),n=parseInt(e.target.dataset.col);await this.handleSquareSelection(t,n)}handleTouchStart(e){e.preventDefault(),this.touchStartTime=Date.now(),this.touchTarget=e.target,e.target.style.opacity="0.7"}async handleTouchEnd(e){if(e.preventDefault(),this.touchTarget&&(this.touchTarget.style.opacity=""),this.touchStartTime&&Date.now()-this.touchStartTime<500){let t=e.target;for(;t&&!t.dataset.row;)t=t.parentElement;if(t&&t.dataset.row!==void 0){const n=parseInt(t.dataset.row),o=parseInt(t.dataset.col);await this.handleSquareSelection(n,o)}}this.touchStartTime=null,this.touchTarget=null}handleTouchCancel(e){e.preventDefault(),this.touchTarget&&(this.touchTarget.style.opacity=""),this.touchStartTime=null,this.touchTarget=null}getLogicalCoordinates(e,t){const n=this.game.gameMode==="human-vs-bot",o=this.game.orientationMode==="table";return this.game.boardFlipped&&(n||o)?{row:7-e,col:7-t}:{row:e,col:t}}getDisplayCoordinates(e,t){const n=this.game.gameMode==="human-vs-bot",o=this.game.orientationMode==="table";return this.game.boardFlipped&&(n||o)?{row:7-e,col:7-t}:{row:e,col:t}}flipBoard(e){this.isFlipping||(this.isFlipping=!0,this.boardElement.style.transform="rotateY(90deg)",this.boardElement.style.transition="transform 0.3s ease-in-out",setTimeout(()=>{const t=this.game.determineOrientation();this.game.boardFlipped=t,this.updateDisplay(),this.boardElement.style.transform="rotateY(0deg)",setTimeout(()=>{this.boardElement.style.transition="",this.isFlipping=!1,e&&e()},150)},150))}updateBoardPerspective(){if(this.isFlipping)return;const e=this.game.boardFlipped,t=this.boardElement.classList.contains("flipped");e&&!t?this.boardElement.classList.add("flipped"):!e&&t&&this.boardElement.classList.remove("flipped"),this.updateDisplay()}async handleBotTurn(){if(this.game.isPerformingRedo)return;const e=this.game.gameMode,t=this.game.isBotTurn(),n=this.game.gameStatus;if(this.game.currentPlayer,this.game.getHumanColor(),e!=="human-vs-bot"||!t)return;if(n!=="playing"&&n!=="check"){this.showBotThinking(!1),this.setInputEnabled(!1);return}const o=(!this.game.moveHistory||this.game.moveHistory.length===0)&&t;this.setInputEnabled(!1),this.showBotThinking(!0),this.updateGameStateIndicators();try{o&&await new Promise(u=>setTimeout(u,500));const a=await this.game.executeBotMove();a&&a.success?(this.updateDisplay(),a.enteredCheck&&this.highlightKing(this.game.humanColor),this.showBotThinking(!1),this.game.gameStatus==="checkmate"||this.game.gameStatus==="stalemate"?(this.setInputEnabled(!1),this.handleGameEnd()):this.setInputEnabled(!0)):(this.showBotThinking(!1),this.showNotification("Bot move failed - your turn","error"),this.setInputEnabled(!0),setTimeout(()=>{this.hideInstructionLabel()},3e3))}catch{this.showBotThinking(!1),this.setInputEnabled(!0),this.showNotification("Bot error - your turn","error"),setTimeout(()=>{this.hideInstructionLabel()},3e3)}}setInputEnabled(e){this.inputEnabled=e,e?(this.boardElement.style.opacity="1",this.boardElement.style.pointerEvents="auto"):(this.boardElement.style.opacity="0.7",this.boardElement.style.pointerEvents="none")}showBotThinking(e){const t=this.game.gameMode,n=this.game.isBotTurn(),o=this.game.gameStatus;document.getElementById("instruction-label");const a=document.getElementById("move-display");if(e&&t==="human-vs-bot"&&n&&(o==="playing"||o==="check")){if(this.hideInstructionLabel(),a&&!document.querySelector(".bot-thinking-spinner")){const u=document.createElement("div");u.className="bot-thinking-spinner",a.parentElement.appendChild(u)}this.inputEnabled&&this.setInputEnabled(!1),this.updatePlayerTurnIndicator(this.game.currentPlayer,t)}else{this.hideInstructionLabel();const u=document.querySelector(".bot-thinking-spinner");u&&u.remove(),t==="human-vs-bot"&&this.updatePlayerTurnIndicator(this.game.currentPlayer,t)}}hideInstructionLabel(){const e=document.getElementById("instruction-label");e&&(e.classList.add("hidden"),e.textContent="")}handleGameEnd(){const e=this.game.gameStatus,t=this.game.currentPlayer;this.setInputEnabled(!1);let n=!1;if(e==="checkmate"){const o=t==="white"?"Black":"White";this.game.gameMode==="human-vs-bot"?(this.game.humanColor==="white"&&o==="White"||this.game.humanColor==="black"&&o==="Black")&&(n=!0):n=!0}this.game.soundEnabled&&this.game.sounds&&(n?this.game.sounds.victory():this.game.sounds.gameEnd())}updateGameStateIndicators(){this.game.gameStatus;const e=this.game.currentPlayer,t=this.game.gameMode;this.updatePlayerTurnIndicator(e,t),this.updateCapturedPiecesDisplay(),this.updateMoveHistoryDisplay()}updatePlayerTurnIndicator(e,t){const n=document.getElementById("current-player");if(!n)return;let o="";try{const h=this.game.calculateMaterialBalance();e==="white"?h>0?o=` (+${h})`:h<0&&(o=` (${h})`):h<0?o=` (+${Math.abs(h)})`:h>0&&(o=` (-${h})`)}catch{}let a="",u=`player-indicator ${e}`;if(t==="human-vs-bot"){this.game.getHumanColor();const h=this.game.isBotTurn(),c=this.game.gameStatus;if(c==="checkmate"||c==="stalemate")a=`Game Over (${c})`,u+=" game-ended";else if(c==="check")h?(a="Bot's turn",u+=" bot-turn check"):(a="Your turn",u+=" human-turn check");else if(h){const y=document.getElementById("instruction-label");y&&!y.classList.contains("hidden")&&y.textContent.includes("Bot is thinking")?(a="Bot is thinking...",u+=" bot-thinking"):(a="Bot's turn",u+=" bot-turn")}else a="Your turn",u+=" human-turn"}else a=`${e.charAt(0).toUpperCase()+e.slice(1)}'s turn`;n.textContent=a,n.className=u}updateCapturedPiecesDisplay(){const e=document.getElementById("captured-pieces");if(!e)return;const{whiteCaptured:t,blackCaptured:n}=this.game.getCapturedPieces(),o=this.game.gameMode,a=this.game.getHumanColor();e.innerHTML="";const u=this.game.calculateMaterialBalance(),h=this.createMaterialBalanceBar(u,o,a);e.appendChild(h);const c=document.createElement("div");c.className="captured-section left";const y=document.createElement("div");if(y.className="captured-section right",o==="human-vs-bot"){const b=a==="white",E=b?n:t,C=b?t:n,S=document.createElement("span");S.className="captured-label",S.textContent="White",c.appendChild(S);const k=document.createElement("span");k.className="captured-pieces-list",k.textContent=E.length>0?E.map(I=>this.game.getPieceSymbol(I)).join(""):"-",c.appendChild(k),c.dataset.pieceCount=E.length;const M=document.createElement("span");M.className="captured-label",M.textContent="Black",y.appendChild(M);const G=document.createElement("span");G.className="captured-pieces-list",G.textContent=C.length>0?C.map(I=>this.game.getPieceSymbol(I)).join(""):"-",y.appendChild(G),y.dataset.pieceCount=C.length}else{const b=document.createElement("span");b.className="captured-label",b.textContent="White",c.appendChild(b);const E=document.createElement("span");E.className="captured-pieces-list",E.textContent=n.length>0?n.map(k=>this.game.getPieceSymbol(k)).join(""):"-",c.appendChild(E),c.dataset.pieceCount=n.length;const C=document.createElement("span");C.className="captured-label",C.textContent="Black",y.appendChild(C);const S=document.createElement("span");S.className="captured-pieces-list",S.textContent=t.length>0?t.map(k=>this.game.getPieceSymbol(k)).join(""):"-",y.appendChild(S),y.dataset.pieceCount=t.length}const g=document.createElement("div");g.className="captured-sections-wrapper",g.appendChild(c),g.appendChild(y),e.appendChild(g),e.style.display="flex"}createMaterialBalanceBar(e,t,n){const o=document.createElement("div");o.className="material-balance-bar";const a=Math.max(0,Math.min(100,(e+39)/78*100)),u=document.createElement("div");let h="balance-indicator";return t==="human-vs-bot"&&(n==="white"&&e>0||n==="black"&&e<0?h+=" human-advantage":e!==0&&(h+=" bot-advantage")),u.className=h,u.style.width=`${a}%`,o.appendChild(u),o}updateMoveHistoryDisplay(){const e=document.getElementById("move-history");if(!e||this.game.currentStateIndex<=0)return;const t=this.game.stateHistory.slice(1,this.game.currentStateIndex+1),n=t.slice(-6);let o='<div class="move-history-title">Recent Moves:</div>';n.forEach((a,u)=>{const h=t.indexOf(a)+1,c=this.game.gameMode==="human-vs-bot"&&a.move&&a.move.piece&&a.move.piece.color!==this.game.humanColor;o+=`
        <div class="move-entry ${c?"bot-move":"human-move"}">
          <span class="move-player">${c?"🤖":"👤"}</span>
          <span class="move-notation">${a.notation}</span>
          <span class="move-number">#${h}</span>
        </div>
      `}),e.innerHTML=o}checkInitialBotTurn(){if(this.game.gameMode!=="human-vs-bot")return;this.game.getHumanColor(),this.game.currentPlayer;const e=this.game.isBotTurn();if(!((this.game.moveHistory?this.game.moveHistory.length:0)>0)&&!(this.game.gameStatus==="checkmate"||this.game.gameStatus==="stalemate")){if(this.game.gameStatus!=="playing"){setTimeout(()=>{this.checkInitialBotTurn()},500);return}e?(this.showBotThinking(!0),this.setInputEnabled(!1),this.updateGameStateIndicators(),setTimeout(()=>{const n=this.game.isBotTurn(),o=!this.game.moveHistory||this.game.moveHistory.length===0;this.game.gameStatus==="playing"&&n&&o?this.handleBotTurn():o||(this.showBotThinking(!1),this.setInputEnabled(!0),this.updateGameStateIndicators())},1e3)):(this.setInputEnabled(!0),this.showBotThinking(!1),this.updateGameStateIndicators())}}onNewGameStart(){this.updateDisplay(),(!this.game.moveHistory||this.game.moveHistory.length===0)&&this.checkInitialBotTurn()}async handleSquareSelection(e,t){if(this.isFlipping||this.inputEnabled===!1)return;if(this.game.gameMode==="human-vs-bot"&&this.game.isBotTurn())if(this.game.isInUndoRedoState){const u=this.getLogicalCoordinates(e,t),h=u.row,c=u.col,y=this.game.board[h][c];if(this.game.lastUndoWasBotMove?this.showNotification("Bot turn - scroll wheel to redo or make your move","warning"):this.showNotification("Bot turn - scroll wheel to redo or make your move","warning"),!(y&&y.color===this.game.humanColor))return}else{const u=document.getElementById("instruction-label");(!u||u.classList.contains("hidden")||!u.textContent.includes("Bot is thinking"))&&this.showNotification("Bot turn","info");return}const n=this.getLogicalCoordinates(e,t),o=n.row,a=n.col;if(this.game.selectedSquare){const u=this.game.selectedSquare.row,h=this.game.selectedSquare.col;if(u===o&&h===a)this.game.selectedSquare=null;else if(this.game.getPossibleMoves(u,h).find(g=>g.row===o&&g.col===a)){this.game.gameStatus;const g=await this.game.makeMove(u,h,o,a);if(g&&g.success){if(this.game.isInUndoRedoState=!1,this.game.lastUndoWasBotMove=!1,this.game.selectedSquare=null,g.enteredCheck&&this.highlightKing(this.game.currentPlayer),!(this.game.gameMode==="human-vs-human"&&!this.game.isUndoRedoAction)){if(this.game.gameMode==="human-vs-bot"&&!this.game.isUndoRedoAction){const b=this.game.gameStatus==="playing"||this.game.gameStatus==="check",E=this.game.isBotTurn();b&&E?(this.showBotThinking(!0),this.setInputEnabled(!1),this.updateGameStateIndicators(),setTimeout(()=>{this.handleBotTurn()},150)):this.game.gameStatus==="checkmate"||this.game.gameStatus==="stalemate"?this.setInputEnabled(!1):this.setInputEnabled(!0)}}}else this.game.selectedSquare=null}else{const g=this.game.board[o][a];if(g&&g.color===this.game.currentPlayer){this.game.selectedSquare={row:o,col:a},this.updateDisplay();return}this.game.isInCheck()?this.highlightKing(this.game.currentPlayer):this.game.selectedSquare=null}}else{const u=this.game.board[o][a];u&&u.color===this.game.currentPlayer&&(this.game.selectedSquare={row:o,col:a})}this.updateDisplay()}updateDisplay(){const e=document.getElementById("game-container");e.classList.remove("orientation-table","orientation-handoff","orientation-none");const t=this.game.gameMode==="human-vs-bot"?"none":this.game.orientationMode;e.setAttribute("data-orientation-mode",t),e.setAttribute("data-board-flipped",this.game.boardFlipped.toString()),e.setAttribute("data-game-mode",this.game.gameMode),e.setAttribute("data-current-player",this.game.currentPlayer);const n=this.boardElement.children;for(let h=0;h<n.length;h++){const c=n[h],y=parseInt(c.dataset.row),g=parseInt(c.dataset.col),b=this.getLogicalCoordinates(y,g),E=this.game.board[b.row][b.col];if(c.innerHTML="",c.classList.remove("selected","valid-move","white-move","black-move","last-move"),E){const C=document.createElement("div");C.className=`chess-piece ${E.color}`,C.setAttribute("data-piece",E.type),C.textContent=this.game.getPieceSymbol(E),c.appendChild(C),b.row===1&&b.col===4||b.row===3&&b.col}if(this.game.selectedSquare&&this.game.selectedSquare.row===b.row&&this.game.selectedSquare.col===b.col&&c.classList.add("selected"),this.game.selectedSquare&&this.game.getPossibleMoves(this.game.selectedSquare.row,this.game.selectedSquare.col).some(S=>S.row===b.row&&S.col===b.col)&&(c.classList.add("valid-move"),c.classList.add(this.game.currentPlayer==="white"?"white-move":"black-move")),this.game.currentStateIndex>0&&this.game.currentStateIndex<this.game.stateHistory.length){const C=this.game.stateHistory[this.game.currentStateIndex];if(C&&C.move){const S=C.move;(S.from.row===b.row&&S.from.col===b.col||S.to.row===b.row&&S.to.col===b.col)&&c.classList.add("last-move")}}}this.game.calculateMaterialBalance(),this.game.currentPlayer;const o=document.getElementById("move-display"),a=document.getElementById("move-expand"),u=document.getElementById("move-info");if(o){let h="";if(this.game.currentStateIndex>0&&this.game.currentStateIndex<this.game.stateHistory.length){const c=this.game.stateHistory[this.game.currentStateIndex];if(c&&c.move){const y=c.commentary||c.notation;let g="";this.game.gameStatus==="checkmate"?g='<span style="color: #FE5F00;"> - Checkmate!</span>':this.game.gameStatus==="check"?g='<span style="color: #FE5F00;"> - Check!</span>':this.game.gameStatus==="stalemate"&&(g='<span style="color: #FE5F00;"> - Stalemate!</span>'),h=y+g}}h||(this.game.gameMode==="human-vs-human"?h="Human vs Human • Ready to play":h=`Bot (${this.game.getBotDifficultyText()}) • Ready to play`),h.includes("<span")?o.innerHTML=h:o.textContent=h,setTimeout(()=>{o.scrollWidth>o.clientWidth&&a&&u?(u.classList.add("has-overflow"),a.dataset.fullText=o.textContent):u&&u.classList.remove("has-overflow")},0)}this.gameStatusElement.textContent="",this.updateGameStateIndicators(),this.game.gameStatus!=="playing"&&this.game.gameStatus!=="check"&&setTimeout(()=>{this.handleGameEnd()},300)}applyTheme(){const e={light:"#ddb88c",dark:"#a0522d",lightTexture:"radial-gradient(circle at 25% 25%, #c9a876 0%, transparent 50%), radial-gradient(circle at 75% 75%, #c9a876 0%, transparent 50%)",darkTexture:"radial-gradient(circle at 25% 25%, #8b4513 0%, transparent 50%), radial-gradient(circle at 75% 75%, #8b4513 0%, transparent 50%)"};document.documentElement.style.setProperty("--light-square",e.light),document.documentElement.style.setProperty("--dark-square",e.dark);const t=this.boardElement.children;for(let n=0;n<t.length;n++){const o=t[n],a=parseInt(o.dataset.row),u=parseInt(o.dataset.col);(a+u)%2===0?(o.style.backgroundColor=e.light,o.style.backgroundImage=e.lightTexture):(o.style.backgroundColor=e.dark,o.style.backgroundImage=e.darkTexture)}}showMessage(e){this.gameStatusElement.textContent=e,setTimeout(()=>{this.updateDisplay()},2e3)}showOptionsMenu(){const e=document.getElementById("options-overlay");if(e){e.classList.remove("hidden"),this.game.originalGameMode=this.game.gameMode,this.game.originalHumanColor=this.game.humanColor,this.game.colorChangedMidGame=!1,this.game.originalBotDifficulty=this.game.botDifficulty,this.game.difficultyChangedMidGame=!1;const t=document.getElementById("options-menu");t&&(t.scrollTop=0),this.updateOptionsButtons(),e.dataset.listenersAdded||(this.setupOptionsEventListeners(),e.dataset.listenersAdded="true")}}hideOptionsMenu(){const e=document.getElementById("options-overlay");e&&e.classList.add("hidden");const t=this.game.determineOrientation();this.game.boardFlipped!==t&&(this.game.boardFlipped=t,this.updateDisplay()),this.game.gameMode==="human-vs-bot"&&this.game.moveHistory.length===0&&setTimeout(()=>{this.checkInitialBotTurn()},100)}updateOptionsButtons(){const e=document.getElementById("options-title");if(e){const C=this.game.gameMode==="human-vs-human"?"Human vs Human":"Human vs Bot";e.textContent=`Chess R1 - ${C}`}const t=document.getElementById("back-btn");if(t){const C=this.game.moveHistory&&this.game.moveHistory.length>0,S=this.game.stateHistory&&this.game.stateHistory.length>1,k=C||S,M=this.game.gameMode!==this.game.originalGameMode,G=this.game.colorChangedMidGame,I=this.game.difficultyChangedMidGame;k?(G||I)&&!M?(t.disabled=!0,G&&I?t.textContent="Start new game (settings changed)":G?t.textContent="Start new game (color changed)":t.textContent="Start new game (difficulty changed)",t.classList.add("disabled")):(t.disabled=!1,t.textContent="Back to game",t.classList.remove("disabled")):(t.disabled=!0,t.textContent="Back to game (no moves yet)",t.classList.add("disabled"))}document.querySelectorAll('input[name="gameMode"]').forEach(C=>{C.checked=C.value===this.game.gameMode}),document.querySelectorAll('input[name="playerColor"]').forEach(C=>{C.checked=C.value===this.game.humanColor}),document.querySelectorAll('input[name="soundEffects"]').forEach(C=>{C.checked=C.value==="on"===this.game.soundEnabled}),document.querySelectorAll('input[name="allowUndo"]').forEach(C=>{C.checked=C.value==="on"===this.game.allowUndo}),document.querySelectorAll('input[name="botDifficulty"]').forEach(C=>{C.checked=C.value===String(this.game.botDifficulty)});const c=document.getElementById("color-group");c&&(this.game.gameMode==="human-vs-bot"?(c.style.display="block",c.offsetHeight):c.style.display="none");const y=document.getElementById("difficulty-group");y&&(this.game.gameMode==="human-vs-bot"?(y.style.display="block",y.offsetHeight):y.style.display="none");const g=document.getElementById("orientation-mode-group");g&&(this.game.gameMode==="human-vs-human"?(g.style.display="block",g.offsetHeight):g.style.display="none");const b=document.getElementById("undo-group");b&&(b.style.display="block",b.offsetHeight),document.querySelectorAll('input[name="orientationMode"]').forEach(C=>{C.checked=C.value===this.game.orientationMode})}setupOptionsEventListeners(){document.querySelectorAll('input[name="gameMode"]').forEach(g=>{g.addEventListener("change",async()=>{if(g.checked&&g.value!==this.game.gameMode)try{const b=this.game.gameMode;await this.game.autoSave(),this.game.setGameMode(g.value),se("last_game_mode",{mode:g.value,timestamp:Date.now()}),this.game.colorChangedMidGame=!1,this.game.originalHumanColor=this.game.humanColor,this.game.difficultyChangedMidGame=!1,this.game.originalBotDifficulty=this.game.botDifficulty;const E=this.game.getStorageKey(),C=localStorage.getItem(E);if(C)try{const M=JSON.parse(C)}catch{}const S=await Q(E);let k=!1;try{k=S&&this.isValidSavedState(S)}catch{k=!1}k?(this.game.loadGameState(S,{preserveGameMode:!0}),this.updateDisplay(),this.showMessage(`Switched to ${g.value==="human-vs-human"?"Human vs Human":"Human vs Bot"} - Game restored!`)):(this.game.newGame(),this.onNewGameStart(),this.showMessage(`Switched to ${g.value==="human-vs-human"?"Human vs Human":"Human vs Bot"} - New game started!`))}catch{this.game.newGame(),this.onNewGameStart()}finally{this.updateOptionsButtons(),setTimeout(()=>{this.updateOptionsButtons(),document.getElementById("color-group"),document.getElementById("difficulty-group"),document.getElementById("orientation-mode-group"),document.getElementById("undo-group")},10)}})}),document.querySelectorAll('input[name="playerColor"]').forEach(g=>{g.addEventListener("change",()=>{g.checked&&(this.game.setHumanColor(g.value),this.game.autoSave(),this.updateOptionsButtons())})}),document.querySelectorAll('input[name="soundEffects"]').forEach(g=>{g.addEventListener("change",()=>{if(g.checked){const b=g.value==="on";this.game.soundEnabled=b,this.game.autoSave()}})}),document.querySelectorAll('input[name="allowUndo"]').forEach(g=>{g.addEventListener("change",()=>{if(g.checked){const b=g.value==="on";this.game.allowUndo=b,this.game.autoSave()}})}),document.querySelectorAll('input[name="botDifficulty"]').forEach(g=>{g.addEventListener("change",()=>{if(g.checked){const b=parseInt(g.value);this.game.setBotDifficulty(b),this.game.autoSave(),this.updateOptionsButtons()}})});const u=document.getElementById("new-game-btn"),h=document.getElementById("back-btn"),c=document.getElementById("options-overlay");u&&u.addEventListener("click",()=>{this.confirmNewGame()}),h&&h.addEventListener("click",()=>{this.hideOptionsMenu()}),document.querySelectorAll('input[name="orientationMode"]').forEach(g=>{g.addEventListener("change",()=>{if(g.checked){this.game.orientationMode=g.value;const b={table:"Table mode: Entire screen rotates for players sitting across",handoff:"Handoff mode: Pass device between players",none:"No rotation: Board stays fixed"};this.showMessage(b[g.value]),this.game.autoSave()}})}),c&&c.addEventListener("click",g=>{g.target===c&&this.hideOptionsMenu()})}confirmNewGame(){this.clearSavedState(),this.game.newGame(),this.updateDisplay(),this.hideOptionsMenu(),this.game.gameMode==="human-vs-bot"&&this.game.humanColor==="black"&&setTimeout(()=>{this.game.gameStatus==="playing"&&this.game.isBotTurn()&&this.checkInitialBotTurn()},1500),this.showMessage("New game started!")}async clearSavedState(){const t=[this.game.getStorageKey(),"chess_game_state"];if(window.creationStorage)try{for(const n of t)await window.creationStorage.plain.removeItem(n)}catch{}else try{for(const n of t)localStorage.removeItem(n)}catch{}}showNotification(e,t="default",n=null){const o=document.getElementById("instruction-label");if(!o)return;n===null&&(n=t==="warning"||t==="error"?3e3:2e3);const a=e.includes("Bot move undone")||e.includes("Bot turn");(t==="warning"||t==="error")&&this.notificationCooldown&&!a||(this.notificationTimeout&&clearTimeout(this.notificationTimeout),o.textContent=e,o.classList.remove("hidden"),o.style.backgroundColor="#FE5F00",o.style.color="white",o.style.fontWeight="bold",(t==="warning"||t==="error")&&(this.notificationCooldown=!0),this.notificationTimeout=setTimeout(()=>{o.classList.add("hidden"),o.style.backgroundColor="",o.style.color="",o.style.fontWeight="",(t==="warning"||t==="error")&&setTimeout(()=>{this.notificationCooldown=!1},500)},n))}showInstructionLabel(e){this.showNotification(e,"default",2e3)}showBotUndoAlert(e){this.showNotification(e,"warning",3e3)}showCheckAlert(e){this.showNotification(e,"warning",3e3)}highlightKing(e){for(let t=0;t<8;t++)for(let n=0;n<8;n++){const o=this.game.board[t][n];if(o&&o.type==="king"&&o.color===e){const a=this.boardElement.children[t*8+n];a&&(a.classList.contains("king-warning")||(a.classList.add("king-warning"),setTimeout(()=>{a.classList.remove("king-warning")},2e3)));return}}}animateUndoRedo(e,t=!1){const n=this.boardElement;if(n){const c=window.getComputedStyle(n).transform,y=c&&c!=="none",g=e==="undo"?.98:1.02;y?n.style.transform=`${c} scale(${g})`:n.style.transform=`scale(${g})`,n.style.transition="transform 0.1s ease",setTimeout(()=>{y?n.style.transform=c:n.style.transform="scale(1)",setTimeout(()=>{n.style.transform="",n.style.transition=""},100)},100)}const o=this.game.getCurrentMoveIndex(),a=this.game.moveHistory?this.game.moveHistory.length:0,u=Math.ceil((o+1)/2);e==="undo"&&t&&(this.game.lastUndoWasBotMove=!0),e==="undo"?o>=0?this.showInstructionLabel(`At move ${u} (${o+1}/${a})`):this.showInstructionLabel("At start of game"):e==="redo"&&this.showInstructionLabel(`At move ${u} (${o+1}/${a})`)}verifyUIConsistency(){const e=[];try{const t=document.getElementById("current-player");if(t){const h=t.textContent.toLowerCase();h.includes(this.game.currentPlayer)||e.push(`Current player display mismatch: UI shows "${h}", game state is "${this.game.currentPlayer}"`)}const n=document.getElementById("move-count");if(n){const h=this.game.getCurrentMoveIndex(),c=h>=0?Math.ceil((h+1)/2):0,y=n.textContent;y.includes(c.toString())||e.push(`Move count display mismatch: UI shows "${y}", expected move number ${c}`)}const o=this.boardElement.children;let a=0;for(let h=0;h<o.length;h++){const c=o[h],y=parseInt(c.dataset.row),g=parseInt(c.dataset.col),b=this.game.board[y][g],E=c.querySelectorAll(".chess-piece"),C=E.length>0,S=b!==null;if(C!==S)a++;else if(S&&C){const k=E[0],M=this.game.getPieceSymbol(b);k.textContent!==M&&a++}}a>0&&e.push(`Board display has ${a} piece mismatches with game state`);const u=document.getElementById("game-status");if(u&&u.textContent.trim()){const h=u.textContent.toLowerCase();this.game.gameStatus==="checkmate"&&!h.includes("checkmate")?e.push(`Game status display mismatch: game is checkmate but UI shows "${h}"`):this.game.gameStatus==="stalemate"&&!h.includes("stalemate")&&e.push(`Game status display mismatch: game is stalemate but UI shows "${h}"`)}return!(e.length>0)}catch{return!1}}updateMenuVisibility(){const e=document.getElementById("color-group"),t=document.getElementById("difficulty-group"),n=document.getElementById("orientation-mode-group");this.game.gameMode==="human-vs-human"?(e&&(e.style.display="none"),t&&(t.style.display="none"),n&&(n.style.display="block")):(e&&(e.style.display="block"),t&&(t.style.display="block"),n&&(n.style.display="none"))}getLatestTimestamp(e){if(!e)return 0;if(e.stateHistory&&e.stateHistory.length>0){const t=e.stateHistory[e.stateHistory.length-1];if(t&&t.timestamp)return t.timestamp}return e.moveHistory&&e.moveHistory.length>0?1:0}async loadGameState(){try{const e=await Q("last_game_mode"),t=(e==null?void 0:e.mode)||null,n="chess_game_state_human_vs_bot",o="chess_game_state_human_vs_human",a=await Q(n),u=await Q(o);let h=null,c=null;if(t&&(t==="human-vs-human"&&u?(h=u,c="human-vs-human"):t==="human-vs-bot"&&a&&(h=a,c="human-vs-bot")),!h)if(a&&u){const y=this.getLatestTimestamp(a);this.getLatestTimestamp(u)>y?(h=u,c="human-vs-human"):(h=a,c="human-vs-bot")}else u?(h=u,c="human-vs-human"):a&&(h=a,c="human-vs-bot");return h||(h=await Q("chess_game_state"),h&&(c=h.gameMode||"human-vs-bot")),h?this.isValidSavedState(h)?(c&&(this.game.gameMode=c),this.game.loadGameState(h),this.applyTheme(),this.updateDisplay(),this.updateMenuVisibility(),!0):(await this.clearSavedState(),!1):!1}catch{return await this.clearSavedState(),!1}}isValidSavedState(e){if(!e||typeof e!="object"||!e.board||!Array.isArray(e.board)||e.moveHistory&&!Array.isArray(e.moveHistory)||e.board.length!==8)return!1;for(let a=0;a<e.board.length;a++){const u=e.board[a];if(!Array.isArray(u)||u.length!==8)return!1}if(!e.currentPlayer||e.currentPlayer!=="white"&&e.currentPlayer!=="black")return!1;const n=(e.moveHistory||[]).length,o=e.totalMoves||n;return!!(n>0||e.currentPlayer==="black"||e.gameStatus&&(e.gameStatus==="checkmate"||e.gameStatus==="stalemate")||e.currentMoveIndex!==void 0&&e.currentMoveIndex>=0||o>0||this.boardDiffersFromInitial(e.board))}boardDiffersFromInitial(e){if(!e||!Array.isArray(e))return!1;const t=this.game?this.game.initializeBoard():this.initializeBoard();for(let n=0;n<8;n++){if(!e[n]||!Array.isArray(e[n]))return!1;for(let o=0;o<8;o++){const a=e[n][o],u=t[n][o];if(!(a===null&&u===null)&&(a===null||u===null||a.type!==u.type||a.color!==u.color))return!0}}return!1}}window.addEventListener("scrollUp",async()=>{if(B&&P)if(B.allowUndo){let w=!1;if(B.gameMode==="human-vs-bot"&&B.currentStateIndex<B.stateHistory.length-1){const e=B.stateHistory[B.currentStateIndex+1];e&&e.move&&e.move.piece&&(w=e.move.piece.color!==B.humanColor)}B.redoMove()&&(B.selectedSquare=null,P.updateDisplay(),P.animateUndoRedo("redo",w),P.updatePlayerTurnIndicator(B.currentPlayer,B.gameMode),P.updateCapturedPiecesDisplay(),P.updateMoveHistoryDisplay(),await B.autoSave(),B.gameMode==="human-vs-bot"?(B.isBotTurn(),P.showBotThinking(!1),P.setInputEnabled(!0)):B.gameMode==="human-vs-human"&&P.setInputEnabled(!0))}else P.showInstructionLabel("Push button to enable undo")});window.addEventListener("scrollDown",async()=>{if(B&&P)if(B.allowUndo){let w=!1;if(B.gameMode==="human-vs-bot"&&B.currentStateIndex>0){const t=B.stateHistory[B.currentStateIndex];t&&t.move&&t.move.piece&&(w=t.move.piece.color!==B.humanColor)}B.undoMove()&&(B.selectedSquare=null,P.updateDisplay(),P.animateUndoRedo("undo",w),P.updatePlayerTurnIndicator(B.currentPlayer,B.gameMode),P.updateCapturedPiecesDisplay(),P.updateMoveHistoryDisplay(),await B.autoSave(),B.gameMode==="human-vs-bot"?(B.isBotTurn(),P.showBotThinking(!1),P.setInputEnabled(!0)):B.gameMode==="human-vs-human"&&P.setInputEnabled(!0))}else P.showInstructionLabel("Push button to enable undo")});let Ce=0;const Ge=300;window.addEventListener("sideClick",()=>{const w=Date.now();w-Ce<Ge||(Ce=w,B&&P&&P.showOptionsMenu())});window.addEventListener("longPressStart",()=>{});window.addEventListener("longPressEnd",()=>{B&&P&&(P.clearSavedState(),B.newGame(),P.updateDisplay(),P.showMessage("New game started!"),be("new_game_started"))});window.onPluginMessage=function(w){if(w.data)try{const e=typeof w.data=="string"?JSON.parse(w.data):w.data}catch{}w.message};function be(w,e={}){if(typeof PluginMessageHandler<"u"){const t={message:`Chess game event: ${w}`,gameEvent:w,details:e,wantsR1Response:!1,wantsJournalEntry:!1};PluginMessageHandler.postMessage(JSON.stringify(t))}}function Ie(w,e,t=365){const n=new Date;n.setTime(n.getTime()+t*24*60*60*1e3);const o=typeof e=="string"?e:JSON.stringify(e),a=encodeURIComponent(o),u=`${w}=${a}; expires=${n.toUTCString()}; path=/; SameSite=Lax`;if(u.length>4096)try{localStorage.setItem(w,o);return}catch{}document.cookie=u}function De(w){const e=w+"=",t=document.cookie.split(";");for(let n=0;n<t.length;n++){let o=t[n].trim();if(o.indexOf(e)===0)try{const a=decodeURIComponent(o.substring(e.length));try{return JSON.parse(a)}catch{return a}}catch{return null}}return null}async function se(w,e){if(!w||typeof w!="string"||e==null)return!1;if(window.creationStorage&&window.creationStorage.plain&&typeof window.creationStorage.plain.setItem=="function")try{const n=JSON.stringify(e),o=btoa(n);return await window.creationStorage.plain.setItem(w,o),!0}catch{}try{return Ie(w,e),!0}catch{}try{const n=JSON.stringify(e);return localStorage.setItem(w,n),!0}catch{}return!1}async function Q(w){if(window.creationStorage&&window.creationStorage.plain&&typeof window.creationStorage.plain.getItem=="function")try{const t=await window.creationStorage.plain.getItem(w);if(t){const n=atob(t);return JSON.parse(n)}}catch{}try{const t=De(w);if(t)return t}catch{}try{const t=localStorage.getItem(w);if(t)return JSON.parse(t)}catch{}return null}document.addEventListener("DOMContentLoaded",async()=>{B=new Me,P=new He(B);const w=document.getElementById("color-group"),e=document.getElementById("difficulty-group"),t=document.getElementById("orientation-mode-group"),n=document.getElementById("undo-group");w&&(w.style.display="block"),e&&(e.style.display="block"),t&&(t.style.display="none"),n&&(n.style.display="block"),await P.loadGameState()?(P.updateDisplay(),P.updateCapturedPiecesDisplay(),P.gameStatusElement.textContent="Game resumed",setTimeout(()=>{P.gameStatusElement.textContent=""},2e3)):(B.newGame(),P.updateDisplay()),P.updateCapturedPiecesDisplay(),be("game_initialized",{theme:B.theme,currentPlayer:B.currentPlayer})});window.addEventListener("beforeunload",w=>{});window.addEventListener("unload",w=>{});window.addEventListener("visibilitychange",()=>{})});export default Te();
